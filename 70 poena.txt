#define _CRT_SECURE_NO_WARNINGS
#include <stdio.h>
#include <string.h>
#include <ctype.h>
#include <limits.h>

void prikaziNiz(int niz[], int n) {
	if (n == 0) {
		printf("\nNiz je prazan\n");
		return;
	}

	printf("\nNiz je: ");

	for (int i = 0; i < n; i++) {
		printf("%d ", niz[i]);
	}

	printf("\n");
}

void printMatrica(int mat[10][10], int brRedova, int brKolona) {

	printf("\nMatrica je:\n");

	for (int i = 0; i < brRedova; i++) {
		for (int j = 0; j < brKolona; j++) {
			printf("%2d ", mat[i][j]);

		}

		printf("\n");
	}

}

void matUNiz(int mat[10][10], int n, int m, int niz[], int* nizn) {

	*nizn = 0;

	for (int i = 0; i < n; i++) {
		for (int j = 0; j < m; j++) {

			if (i % 2 == 0) {
				niz[(*nizn)++] = mat[i][j];
			}
			else {
				niz[(*nizn)++] = mat[i][m-1-j];
			}

		}
	}


}

void zadatak1(int mat[10][10], int n, int m) {

	int niz[100];
	int nizn = 0;

	printMatrica(mat, n, m);

	matUNiz(mat, n, m, niz, &nizn);

	prikaziNiz(niz, nizn);
}

//////

typedef struct knjiga {
	char isbn[18];
	double cena;
	char naziv[50];
	char imeIPrezimeAutora[50];
} KNJIGA;

typedef struct cvor CVOR;
typedef CVOR* PCVOR;

struct cvor {
	KNJIGA info;
	PCVOR sledeci;
};

int daLiJeDobarISBN(char* isbn) {


	if (!(strlen(isbn) == 17 &&
		isbn[3] == '-' &&
		isbn[5] == '-' &&
		isbn[8] == '-' &&
		isbn[15] == '-')) {

		return 0;
	}

	for (int i = 0; i < 16; i++) {
		if (i == 3 || i == 5 || i == 8 || i == 15) {
			continue;
		}

		if (!isdigit(isbn[i])) {
			return 0;
		}
	}


	return 1;
}

KNJIGA vratiKnjigu() {
	KNJIGA nova;

	while (1) {
		printf("\nUnesite isbn: \n");
		gets(nova.isbn);
		printf("Unesite cenu: \n");
		scanf("%lf", &nova.cena);
		getchar();
		printf("Unesite naziv: \n");
		gets(nova.naziv);
		printf("Unesite ime autora: \n");
		gets(nova.imeIPrezimeAutora);

		if (daLiJeDobarISBN(nova.isbn)) {
			printf("\nKnjiga uspesno uneta!\n");
			break;
		}
		else {
			printf("\nGreska pri unosu!\n");
		}
	}


	return nova;
}

void dodajNaPocetak(PCVOR* glava, KNJIGA k) {
	PCVOR noviCvor = malloc(sizeof(CVOR));

	noviCvor->info = k;

	noviCvor->sledeci = *glava;

	*glava = noviCvor;
}

void prikazi(PCVOR glava) {
	if (glava == NULL) {
		printf("\nLista knjiga je prazna\n");
		return;
	}

	PCVOR tekuci = glava;


	printf("\Knjige: \n");
	while (tekuci != NULL) {
		printf(" %s %s %s %.2lf\n",
			tekuci->info.isbn, tekuci->info.imeIPrezimeAutora, tekuci->info.naziv, tekuci->info.cena);

		tekuci = tekuci->sledeci;
	}

}

void zadatak2(PCVOR* glava) {

	prikazi(*glava);

	while (1) {
		KNJIGA nova = vratiKnjigu();

		dodajNaPocetak(glava, nova);

		char odgovor[10];
		printf("\nUnesite jos jednu? (d/n): ");
		gets(odgovor);
		if (strcmp(odgovor, "d") == 0) {
			continue;
		}
		else {
			break;
		}
	}

	prikazi(*glava);
}

////////////


////////////

int meni() {
	printf("\n\n\
##############################\n\
Student: \n\
Broj indeksa: \n\
Predmet: Programiranje 1\n\
##############################\n\
1. Pokreni zadatak 1\n\
2. Pokreni zadatak 2\n\
3. Pokreni zadatak 3\n\
0. Kraj rada\n\n\
 Vas izbor: ");

	int izbor;
	scanf("%d", &izbor);
	getchar();

	return izbor;
}

void glavniMeni() {

	int mat[10][10] = {
		{4,5,7,1},
		{5,9,6,5},
		{3,8,6,7} 
	};

	int brRedova = 3;
	int brKolona = 4;

	PCVOR glava = NULL;

	int izbor;
	do {
		izbor = meni();

		switch (izbor) {
		case 1:
			zadatak1(mat, brRedova, brKolona);
			break;
		case 2:
			zadatak2(&glava);
			break;
		case 3:

			break;
		case 0:
			printf("\nKraj rada");
			break;
		default:
			printf("\nPOGRESAN IZBOR\n");
		}

	} while (izbor != 0);
}


int main() {


	glavniMeni();



	printf("\n\n");
	system("pause");
	return 0;
}
